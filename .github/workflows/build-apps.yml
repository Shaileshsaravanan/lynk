name: Build Apps

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['18']
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        working-directory: py
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Python app
        working-directory: py
        run: pyinstaller --clean --noconfirm track.spec

      - name: Copy binaries to Electron
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then PLATFORM=linux; fi
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then PLATFORM=mac; fi
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then PLATFORM=win; fi
          mkdir -p electron/binaries/$PLATFORM
          cp -r py/dist/* electron/binaries/$PLATFORM/

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Electron dependencies
        working-directory: electron
        run: npm install

      - name: Build Electron app
        working-directory: electron
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-release-${{ matrix.os }}
          path: electron/out/make/
